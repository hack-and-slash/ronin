{"version":3,"sources":["components/ClanFields.module.css","components/NpcCard.module.css","components/EnemiesFields.module.css","components/CharacterFields.module.css","components/Fields/TextInput.module.css","components/AlliesFields.module.css","components/VillainsFields.module.css","App.module.css","images/clans/clan-1.jpg","images/clans/clan-2.jpg","images/clans/clan-3.jpg","images/clans/clan-4.jpg","components/Fields/Checkbox.js","components/Fields/TextInput.js","components/CharacterFields.js","components/ClanFields.js","components/NpcCard.js","components/AlliesFields.js","components/EnemiesFields.js","components/VillainsFields.js","localStorage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Checkbox","props","fieldProps","input","TextInput","label","name","className","styles","textInput","htmlFor","fieldWrapper","id","component","field","CharacterFields","characterFields","backgroundFields","fields","history","historyLabel","historyField","checkboxes","type","value","lifeStatus","lifeStatusSeparator","ClanFields","clans","clansTitle","clan","clanName","clanNameField","clanDescriptionField","src","Clan1","clanLogo","alt","Clan2","Clan3","Clan4","NpcCard","isVillain","npcCard","npcCardField","npcCardInput","npcCardFooter","allies","Array","fill","AlliesFields","alliesFieldsWrapper","alliesFieldsTitle","alliesFields","map","ally","index","allyCard","key","enemies","Enemy","fieldCell","EnemiesFields","enemiesFields","enemiesFieldsTitle","cellSpacing","enemy","VillainsFields","villainTitle","initialValues","compaixao","determinacao","getFormValues","storedValues","JSON","parse","localStorage","getItem","Object","keys","length","setFormValues","object","setItem","stringify","resetFields","form","initialize","App","onSubmit","values","console","log","render","handleSubmit","style","display","formWrapper","onClick","firstRow","width","paddingLeft","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55d4fe83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clans\":\"ClanFields_clans__3baxJ\",\"clansTitle\":\"ClanFields_clansTitle__3F5Gy\",\"clan\":\"ClanFields_clan__1OuYV\",\"clanName\":\"ClanFields_clanName__2GS6G\",\"clanNameField\":\"ClanFields_clanNameField__1JmIO\",\"clanDescriptionField\":\"ClanFields_clanDescriptionField__23PvG\",\"clanLogo\":\"ClanFields_clanLogo__3jRY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"npcCard\":\"NpcCard_npcCard__1vrkK\",\"npcCardFooter\":\"NpcCard_npcCardFooter__3qVNx\",\"npcCardInput\":\"NpcCard_npcCardInput__ZWK60\",\"npcCardField\":\"NpcCard_npcCardField__d-lRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enemiesFields\":\"EnemiesFields_enemiesFields__2ZZ7b\",\"enemiesFieldsTitle\":\"EnemiesFields_enemiesFieldsTitle__2czqf\",\"fieldCell\":\"EnemiesFields_fieldCell__33qrP\",\"field\":\"EnemiesFields_field__3ncXx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterFields\":\"CharacterFields_characterFields__12hpd\",\"backgroundFields\":\"CharacterFields_backgroundFields__21swl\",\"fields\":\"CharacterFields_fields__11skk\",\"history\":\"CharacterFields_history__3MoTm\",\"historyLabel\":\"CharacterFields_historyLabel__3NKPM\",\"historyField\":\"CharacterFields_historyField__acVK0\",\"checkboxes\":\"CharacterFields_checkboxes__YgOmu\",\"lifeStatus\":\"CharacterFields_lifeStatus__VOcVt\",\"lifeStatusSeparator\":\"CharacterFields_lifeStatusSeparator__31IBd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"TextInput_textInput__3b1XT\",\"label\":\"TextInput_label__3YBSM\",\"fieldWrapper\":\"TextInput_fieldWrapper__3fTtm\",\"field\":\"TextInput_field__24-Ad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alliesFieldsWrapper\":\"AlliesFields_alliesFieldsWrapper__1nmPW\",\"alliesFieldsTitle\":\"AlliesFields_alliesFieldsTitle__2A3Nu\",\"alliesFields\":\"AlliesFields_alliesFields__3fpj3\",\"allyCard\":\"AlliesFields_allyCard__1B_5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"villainTitle\":\"VillainsFields_villainTitle__2SANe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"App_formWrapper__1fP4v\",\"firstRow\":\"App_firstRow__3eq2R\"};","module.exports = __webpack_public_path__ + \"static/media/clan-1.442b567c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clan-2.05624a6a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clan-3.db4f29d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/clan-4.3ec186ae.jpg\";","import React from 'react';\nimport { Field } from 'react-final-form';\n\nconst Checkbox = (props) => (\n  <Field {...props}>\n    {fieldProps => (\n      <input {...fieldProps.input} />\n    )}\n  </Field>\n);\n\nexport default Checkbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'react-final-form';\n\nimport styles from './TextInput.module.css';\n\nconst TextInput = ({ label, name }) => (\n  <div className={styles.textInput}>\n    <label className={styles.label} htmlFor={name}>{label}</label>\n    <div className={styles.fieldWrapper}>\n      <Field id={name} name={name} component=\"input\" className={styles.field} />\n    </div>\n  </div>\n);\n\nTextInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n};\n\nexport default TextInput;\n","import React from 'react';\nimport { Field } from 'react-final-form';\n\nimport Checkbox from './Fields/Checkbox';\nimport TextInput from './Fields/TextInput';\n\nimport styles from './CharacterFields.module.css';\n\nconst CharacterFields = () => (\n  <section className={styles.characterFields}>\n    <div className={styles.backgroundFields}>\n      <div className={styles.fields}>\n        <TextInput label=\"Nome:\" name=\"nome\" />\n        <TextInput label=\"Aparência:\" name=\"aparencia\" />\n        <TextInput label=\"Técnica:\" name=\"tecnica\" />\n        <TextInput label=\"Combate:\" name=\"combate\" />\n        <TextInput label=\"Bloqueio:\" name=\"bloqueio\" />\n        <TextInput label=\"Família:\" name=\"familia\" />\n        <TextInput label=\"Cicatriz:\" name=\"cicatriz\" />\n        <TextInput label=\"Significado:\" name=\"significado\" />\n        <TextInput label=\"Pesadelo:\" name=\"pesadelo\" />\n      </div>\n      <div className={styles.history}>\n        <label className={styles.historyLabel}>Histórico</label>\n        <Field name=\"historico\" component=\"textarea\" className={styles.historyField} />\n      </div>\n    </div>\n    <div className={styles.checkboxes}>\n      <div>\n        <label>Reputação:</label>\n        <Checkbox name=\"reputacao\" type=\"checkbox\" value=\"1\" />\n        <Checkbox name=\"reputacao\" type=\"checkbox\" value=\"2\" />\n        <Checkbox name=\"reputacao\" type=\"checkbox\" value=\"3\" />\n        <Checkbox name=\"reputacao\" type=\"checkbox\" value=\"4\" />\n        <Checkbox name=\"reputacao\" type=\"checkbox\" value=\"5\" />\n        <Checkbox name=\"reputacao\" type=\"checkbox\" value=\"6\" />\n      </div>\n      <div>\n        <label>Compaixão:</label>\n        <Checkbox name=\"compaixao\" type=\"checkbox\" value=\"1\" />\n        <Checkbox name=\"compaixao\" type=\"checkbox\" value=\"2\" />\n        <Checkbox name=\"compaixao\" type=\"checkbox\" value=\"3\" />\n        <Checkbox name=\"compaixao\" type=\"checkbox\" value=\"4\" />\n        <Checkbox name=\"compaixao\" type=\"checkbox\" value=\"5\" />\n        <Checkbox name=\"compaixao\" type=\"checkbox\" value=\"6\" />\n      </div>\n      <div>\n        <label>Determinação:</label>\n        <Checkbox name=\"determinacao\" type=\"checkbox\" value=\"1\" />\n        <Checkbox name=\"determinacao\" type=\"checkbox\" value=\"2\" />\n        <Checkbox name=\"determinacao\" type=\"checkbox\" value=\"3\" />\n        <Checkbox name=\"determinacao\" type=\"checkbox\" value=\"4\" />\n        <Checkbox name=\"determinacao\" type=\"checkbox\" value=\"5\" />\n        <Checkbox name=\"determinacao\" type=\"checkbox\" value=\"6\" />\n      </div>\n    </div>\n    <div className={styles.lifeStatus}>\n      <label>\n        <span>Ferido</span>\n        <Checkbox name=\"ferido\" type=\"checkbox\" />\n      </label>\n      <div className={styles.lifeStatusSeparator} />\n      <label>\n        <Checkbox name=\"morto\" type=\"checkbox\" />\n        <span>Morto</span>\n      </label>\n    </div>\n  </section>\n);\n\nexport default CharacterFields;\n","import React from 'react';\nimport { Field } from 'react-final-form';\n\nimport Clan1 from 'images/clans/clan-1.jpg';\nimport Clan2 from 'images/clans/clan-2.jpg';\nimport Clan3 from 'images/clans/clan-3.jpg';\nimport Clan4 from 'images/clans/clan-4.jpg';\n\nimport styles from './ClanFields.module.css';\n\nconst ClanFields = () =>(\n  <section className={styles.clans}>\n    <h2 className={styles.clansTitle}>Clãs Influentes</h2>\n\n    <div className={styles.clan}>\n      <div className={styles.clanName}>\n        <label>Nome:</label>\n        <Field name=\"clan-1-name\" component=\"input\" className={styles.clanNameField} />\n      </div>\n      <Field name=\"clan-1-description\" component=\"textarea\" className={styles.clanDescriptionField} />\n      <img src={Clan1} className={styles.clanLogo} alt=\"Logotipo do clã\" />\n    </div>\n\n    <div className={styles.clan}>\n      <div className={styles.clanName}>\n        <label>Nome:</label>\n        <Field name=\"clan-2-name\" component=\"input\" className={styles.clanNameField} />\n      </div>\n      <Field name=\"clan-2-description\" component=\"textarea\" className={styles.clanDescriptionField} />\n      <img src={Clan2} className={styles.clanLogo} alt=\"Logotipo do clã\" />\n    </div>\n\n    <div className={styles.clan}>\n      <div className={styles.clanName}>\n        <label>Nome:</label>\n        <Field name=\"clan-3-name\" component=\"input\" className={styles.clanNameField} />\n      </div>\n      <Field name=\"clan-3-description\" component=\"textarea\" className={styles.clanDescriptionField} />\n      <img src={Clan3} className={styles.clanLogo} alt=\"Logotipo do clã\" />\n    </div>\n\n    <div className={styles.clan}>\n      <div className={styles.clanName}>\n        <label>Nome:</label>\n        <Field name=\"clan-4-name\" component=\"input\" className={styles.clanNameField} />\n      </div>\n      <Field name=\"clan-4-description\" component=\"textarea\" className={styles.clanDescriptionField} />\n      <img src={Clan4} className={styles.clanLogo} alt=\"Logotipo do clã\" />\n    </div>\n  </section>\n);\n\nexport default ClanFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'react-final-form';\n\nimport Checkbox from './Fields/Checkbox';\nimport styles from './NpcCard.module.css';\n\nconst NpcCard = ({ className, isVillain, id }) => (\n  <fieldset className={className || styles.npcCard}>\n    <div className={styles.npcCardField}>\n      <label>Nome:</label>\n      <Field name={`npc-nome-${id}`} component=\"input\" className={styles.npcCardInput} />\n    </div>\n    <div className={styles.npcCardField}>\n      <label>Aparência:</label>\n      <Field name={`npc-aparencia-${id}`} component=\"input\" className={styles.npcCardInput} />\n    </div>\n    <div className={styles.npcCardField}>\n      <label>Técnica:</label>\n      <Field name={`npc-tecnica-${id}`} component=\"input\" className={styles.npcCardInput} />\n    </div>\n\n    {!isVillain && (\n      <div className={styles.npcCardField}>\n        <label>Ocupação:</label>\n        <Field name={`npc-ocupacao-${id}`} component=\"input\" className={styles.npcCardInput} />\n      </div>\n    )}\n\n    {isVillain && (\n      <>\n      <div className={styles.npcCardField}>\n        <label>Combate:</label>\n        <Field name={`npc-combate-${id}`} component=\"input\" className={styles.npcCardInput} />\n      </div>\n      <div className={styles.npcCardField}>\n        <label>Bloqueio:</label>\n        <Field name={`npc-bloqueio-${id}`} component=\"input\" className={styles.npcCardInput} />\n      </div>\n      </>\n    )}\n\n    <div className={styles.npcCardField}>\n      <label>Histórico:</label>\n      <Field name={`npc-historico-${id}`} component=\"textarea\" className={styles.npcCardInput} />\n    </div>\n\n    <div className={styles.npcCardFooter}>\n      {!isVillain && (\n        <label>\n          <Checkbox name={`npc-aliado-${id}`} type=\"checkbox\" value=\"1\" />\n          <span>Aliado</span>\n        </label>\n      )}\n      {isVillain && (\n        <label>\n          <Checkbox name={`npc-derrotado-${id}`} type=\"checkbox\" value=\"1\" />\n          <span>Derrotado</span>\n        </label>\n      )}\n      <label>\n        <span>Morto</span>\n        <Checkbox name={`npc-morto-${id}`} type=\"checkbox\" value=\"1\" />\n      </label>\n    </div>\n  </fieldset>\n);\n\nNpcCard.propTypes = {\n  className: PropTypes.string,\n  isVillain: PropTypes.bool,\n  id: PropTypes.string,\n};\n\nexport default NpcCard;\n","import React from 'react';\n\nimport NpcCard from './NpcCard';\nimport styles from './AlliesFields.module.css';\n\nconst allies = Array(6).fill();\n\nconst AlliesFields = () => (\n  <section className={styles.alliesFieldsWrapper}>\n    <h2 className={styles.alliesFieldsTitle}>Possíveis aliados</h2>\n    <div className={styles.alliesFields}>\n      {allies.map((ally, index) => (\n        <NpcCard className={styles.allyCard} key={`ally-${index}`} id={`ally-${index}`} />\n      ))}\n    </div>\n  </section>\n);\n\nexport default AlliesFields;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Field } from 'react-final-form';\n\nimport styles from './EnemiesFields.module.css';\n\nconst enemies = Array(15).fill();\n\nconst Enemy = ({ id }) => (\n  <tr>\n    <td className={styles.fieldCell}>\n      <Field name={`inimigo-name-${id}`} component=\"input\" className={styles.field} />\n    </td>\n    <td className={styles.fieldCell}>\n      <Field name={`inimigo-combate-${id}`} component=\"input\" className={styles.field} />\n    </td>\n    <td className={styles.fieldCell}>\n      <Field name={`inimigo-bloqueios-${id}`} component=\"input\" className={styles.field} />\n    </td>\n  </tr>\n);\n\nEnemy.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n\nconst EnemiesFields = () => (\n  <section className={styles.enemiesFields}>\n    <h2 className={styles.enemiesFieldsTitle}>Inimigos</h2>\n    <table cellSpacing=\"0\">\n      <thead>\n        <tr>\n          <th className={styles.fieldCell}>Inimigo</th>\n          <th className={styles.fieldCell}>Combate</th>\n          <th className={styles.fieldCell}>Bloqueios</th>\n        </tr>\n      </thead>\n      <tbody>\n        {enemies.map((enemy, index) => <Enemy key={index} id={index}/>)}\n      </tbody>\n    </table>\n  </section>\n);\n\nexport default EnemiesFields;\n","import React from 'react';\n\nimport NpcCard from './NpcCard';\nimport styles from './VillainsFields.module.css';\n\nconst VillainsFields = () =>(\n  <section>\n    <h2 className={styles.villainTitle}>Vilão 1</h2>\n    <NpcCard isVillain id=\"villain-1\" />\n    <h2 className={styles.villainTitle}>Vilão 2</h2>\n    <NpcCard isVillain id=\"villain-2\" />\n    <h2 className={styles.villainTitle}>Vilão Final</h2>\n    <NpcCard isVillain id=\"villain-3\" />\n  </section>\n);\n\nexport default VillainsFields;\n","const FIELD_KEY = 'form_values';\n\nexport const initialValues = {\n  compaixao: ['1', '2'],\n  determinacao: ['1', '2']\n};\n\nexport const getFormValues = () => {\n  const storedValues =  JSON.parse(localStorage.getItem(FIELD_KEY) || '{}');\n  const isStorageUsed = Object.keys(storedValues).length > 0;\n\n  return isStorageUsed ? storedValues : initialValues;\n};\n\nexport const setFormValues = (object) =>\n  localStorage.setItem( FIELD_KEY, JSON.stringify(object) );\n\nexport default {\n  getFormValues,\n  setFormValues,\n  initialValues,\n};\n","import React from 'react';\nimport { Form } from 'react-final-form';\n\nimport CharacterFields from 'components/CharacterFields';\nimport ClanFields from 'components/ClanFields';\nimport AlliesFields from 'components/AlliesFields';\nimport EnemiesFields from 'components/EnemiesFields';\nimport VillainsFields from 'components/VillainsFields';\n\nimport styles from './App.module.css';\n\nimport localStorage from './localStorage';\n\nexport const resetFields = (form) => () => form.initialize(localStorage.initialValues);\n\nfunction App() {\n  return (\n    <Form\n      onSubmit={(values) => console.log(values)}\n      initialValues={localStorage.getFormValues()}\n      render={({ handleSubmit, values, form }) => {\n        localStorage.setFormValues(values);\n\n        return (\n          <form onSubmit={handleSubmit} style={{display: 'flex'}}>\n            <section className={styles.formWrapper}>\n              <input type=\"button\" onClick={resetFields(form)} value=\"limpar\" />\n              <div className={styles.firstRow}>\n                <CharacterFields />\n                <ClanFields />\n              </div>\n              <div className={styles.firstRow}>\n                <AlliesFields />\n                <EnemiesFields />\n              </div>\n            </section>\n            <section style={{width: '25%', paddingLeft: 40}}>\n              <VillainsFields />\n            </section>\n          </form>\n        );\n      } }\n    />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}